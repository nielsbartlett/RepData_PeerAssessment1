{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n\n## Introduction\nIt is now possible to collect a large amount of data about personal\nmovement using activity monitoring devices such as a\n[Fitbit](http://www.fitbit.com), [Nike\nFuelband](http://www.nike.com/us/en_us/c/nikeplus-fuelband), or\n[Jawbone Up](https://jawbone.com/up). These type of devices are part of\nthe \"quantified self\" movement -- a group of enthusiasts who take\nmeasurements about themselves regularly to improve their health, to\nfind patterns in their behavior, or because they are tech geeks. But\nthese data remain under-utilized both because the raw data are hard to\nobtain and there is a lack of statistical methods and software for\nprocessing and interpreting the data.\n\nThis assignment makes use of data from a personal activity monitoring\ndevice. This device collects data at 5 minute intervals through out the\nday. The data consists of two months of data from an anonymous\nindividual collected during the months of October and November, 2012\nand include the number of steps taken in 5 minute intervals each day.\n\n## Data\n\nThe data for this assignment can be downloaded from the course web\nsite:\n\n* Dataset: [Activity monitoring data](https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip) [52K]\n\nThe variables included in this dataset are:\n\n* **steps**: Number of steps taking in a 5-minute interval (missing\n    values are coded as `NA`)\n\n* **date**: The date on which the measurement was taken in YYYY-MM-DD\n    format\n\n* **interval**: Identifier for the 5-minute interval in which\n    measurement was taken\n\n\nThe dataset is stored in a comma-separated-value (CSV) file and there\nare a total of 17,568 observations in this\ndataset.\n\n\n## Loading and preprocessing the data\nRead the data directly from the zip file.\n```{r}\ndata <- read.table(unz(\"activity.zip\", \"activity.csv\"), header=T, quote=\"\\\"\", sep=\",\")\n```\n\nThis is what the data looks like:\n```{r}\nhead(data)\n```\n\n## What is mean total number of steps taken per day?\nCalculate the total number of steps taken each day by aggregating by date. Ignore missing values.\n\n```{r}\ndailysum <- aggregate(x = data[\"steps\"],\n                     FUN = sum,\n                     by = list(Group.date = data$date), na.rm=TRUE)\n```\n\n\nThis is what the aggregated data looks like:\n```{r}\nhead(dailysum)\n```\n\nPlot a histogram of the total number of steps taken each day.\n\n```{r}\nhist(x=dailysum$steps, breaks=10, main=\"Histogram of Daily Steps\", xlab=\"Steps\", ylab=\"Frequency\", xlim=c(0, 25000), ylim=c(0, 20))\nmeanDaily <- mean(dailysum[[\"steps\"]])\nmedianDaily <- median(dailysum[[\"steps\"]])\nabline(v=meanDaily, col=\"blue\")\nabline(v=medianDaily, col=\"red\")\n```\n\nThe mean (blue vertical line) is: `r meanDaily`\n\nThe median (red vertical line) is: `r medianDaily`\n\n\n## What is the average daily activity pattern?\nCalculate the daily activity by aggregating by interval (time of day). Ignore missing values.\n\n```{r}\ndailyav <- aggregate(x = data[\"steps\"],\n                      FUN = mean,\n                      by = list(Group.interval = data$interval), na.rm=TRUE)\n\nmaxrow <- dailyav[ dailyav$steps == max(dailyav$steps), ]\n```\n\n\nThis is what the aggregated data looks like:\n```{r}\nhead(dailyav)\n```\n\nPlot the daily averaged steps by interval (time of day).\n\n```{r}\nplot(dailyav, type=\"l\", xlab=\"Interval\", ylab=\"Steps\", main=\"Average steps by time of day\")\nabline(v=maxrow$Group.interval, col=\"red\")\nabline(h=maxrow$steps, col=\"red\")\n````\n\nThe interval with the maximum number of steps is: `r maxrow$Group.interval` with a value of `r maxrow$steps`.\n\n## Imputing missing values\n\nCalculate the number of values missing from the data.\n\n```{r}\nnumMissingValues <- length(data$steps[is.na(data$steps)])\n```\n\nThe number of missing values is: `r numMissingValues`.\n\nUse the Hmisc package to impute the missing data.\n\nWork on a copy of the original data.\n\nUse the impute function to set the missing values to the median.\n\n```{r warning=FALSE, message=FALSE}\nlibrary(Hmisc)\n```\n\n```{r}\nnewdata <- data\nnewdata$steps <- impute(newdata$steps, median)\n```\n\nThis is what the imputed data looks like:\n```{r}\nhead(newdata)\n```\n\nCalculate the total number of steps taken each day by aggregating by date.\n\n```{r}\nnewdailysum <- aggregate(x = newdata[\"steps\"],\n                     FUN = sum,\n                     by = list(Group.date = newdata$date), na.rm=TRUE)\n```\n\n\nThis is what the aggregated data looks like:\n```{r}\nhead(newdailysum)\n```\n\nPlot a histogram of the total number of steps taken each day.\n\n```{r}\nhist(x=newdailysum$steps, breaks=10, main=\"Histogram of Daily Steps (Imputed data)\", xlab=\"Steps\", ylab=\"Frequency\", xlim=c(0, 25000), ylim=c(0, 25))\nnewmeanDaily <- mean(newdailysum[[\"steps\"]])\nnewmedianDaily <- median(newdailysum[[\"steps\"]])\nabline(v=newmeanDaily, col=\"blue\")\nabline(v=newmedianDaily, col=\"red\")\n```\n\nThe imputed data mean is: `r newmeanDaily`\n\nThe imputed data median is: `r newmedianDaily`\n\nThe original mean is: `r meanDaily`\n\nThe original median is: `r medianDaily`\n\n\n## Are there differences in activity patterns between weekdays and weekends?\n\nCreate a new function to determine if a date is a weekday or a weekend and then vectorize it.\n\n```{r}\nisweekend <- function(date) {\n    if (weekdays(date) == \"Saturday\" | weekdays(date) == \"Sunday\")\n        return(\"weekend\")\n    else\n        return(\"weekday\")\n}\n\nvisweekend <- Vectorize(isweekend, \"date\")\n```\n\nNow mutate the new data set and add a new factor variable to it\n\n```{r}\nlibrary(plyr)\nnewdata <- mutate(newdata, DayType = visweekend(as.Date(date)))\nnewdata$DayType <- as.factor(newdata$DayType)\n```\n\nThe modified dataset looks like this:\n\n```{r}\nhead(newdata)\n```\n\nAggregate the data by interval for weekdays and weekends.\n\n```{r}\nnewdailyav <- aggregate(steps ~ interval + DayType, newdata, mean)\n```\n\nThe aggregated data looks like this:\n\n```{r}\nhead(newdailyav)\n```\n\nUse lattice to plot the data:\n\n```{r}\nlibrary(lattice)\nxyplot(steps ~ interval | DayType, newdailyav, type = \"l\", layout = c(1,2),\n    main = \"Average number of steps taken by interval for weekdays and Weekends\",\n    xlab = \"Interval (time of day)\", ylab = \"Steps\" )\n```\n\n\n\n\n",
    "created" : 1442227372241.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3112649652",
    "id" : "839B895B",
    "lastKnownWriteTime" : 1442767478,
    "path" : "C:/Users/Niels/RepRes Assess1/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}